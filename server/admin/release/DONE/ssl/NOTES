
https://certbot.eff.org/lets-encrypt/ubuntuxenial-apache

Step #1:
--------

sudo apt-get update
sudo apt-get install software-properties-common
sudo add-apt-repository universe
sudo add-apt-repository ppa:certbot/certbot
sudo apt-get update
sudo apt-get install certbot python-certbot-apache 

Step #2:
--------

sudo certbot --apache


Have it overwrite the apache config file.
When done, generated this output:

Congratulations! You have successfully enabled https://fleetdev.arqnetworks.com

You should test your configuration at:
https://www.ssllabs.com/ssltest/analyze.html?d=fleetdev.arqnetworks.com
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/fleetdev.arqnetworks.com/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/fleetdev.arqnetworks.com/privkey.pem
   Your cert will expire on 2019-08-29. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot again
   with the "certonly" option. To non-interactively renew *all* of
   your certificates, run "certbot renew"
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le

Automating renewal
------------------
The Certbot packages on your system come with a cron job that will renew your certificates automatically before they expire. 
Since Let's Encrypt certificates last for 90 days, it's highly advisable to take advantage of this feature. 
You can test automatic renewal for your certificates by running this command:

sudo certbot renew --dry-run

Check Syntax:
------------

sudo apache2ctl configtest

Restart Apache:
---------------
sudo apachectl -k graceful


/etc/apache2/sites-available/000-default.conf
---------------------------------------------

LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule ssl_module modules/mod_ssl.so

<VirtualHost *:80>
	ServerName fleetdev.arqnetworks.com
	ServerAlias www.fleetdev.arqnetworks.com

	ServerAdmin douglasselph@gmail.com
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# LogLevel ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error80.log
	CustomLog ${APACHE_LOG_DIR}/access80.log combined 

	ProxyPreserveHost On
	ProxyPassMatch ^/phpmyadmin !

	ProxyPass / http://127.0.0.1:9000/
	ProxyPassReverse / http://127.0.0.1:9000/

	RewriteEngine on
	RewriteCond %{SERVER_NAME} =fleetdev.arqnetworks.com [OR]
	RewriteCond %{SERVER_NAME} =www.fleetdev.arqnetworks.com
	RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]

</VirtualHost>

<VirtualHost *:443>
	ServerAdmin douglasselph@gmail.com

	ServerName fleetdev.arqnetworks.com
	ServerAlias www.fleetdev.arqnetworks.com

	DocumentRoot /var/www/html

	ErrorLog ${APACHE_LOG_DIR}/error443.log
	CustomLog ${APACHE_LOG_DIR}/access443.log combined

	SSLEngine on
	SSLOptions +StrictRequire

	ProxyPreserveHost On
	ProxyPassMatch ^/phpmyadmin !
	ProxyPass / http://127.0.0.1:9000/
	ProxyPassReverse / http://127.0.0.1:9000/

	# RedirectMatch ^/$ https://fleetdev.com/

	SSLCertificateFile /etc/letsencrypt/live/fleetdev.arqnetworks.com/fullchain.pem
	SSLCertificateKeyFile /etc/letsencrypt/live/fleetdev.arqnetworks.com/privkey.pem
	Include /etc/letsencrypt/options-ssl-apache.conf

</VirtualHost>
# vim: syntax=apache ts=4 sw=4 sts=4 sr noet


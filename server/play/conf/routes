# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file          controllers.Assets.at(path="/public", file)

### HOME ###

GET     /                         controllers.HomeController.index()
GET     /login                    controllers.HomeController.login()
POST    /login                    controllers.HomeController.postLogin()
GET     /logout                   controllers.HomeController.logout()
GET     /problem                  controllers.HomeController.problem(msg : String)
GET     /daily/:date              controllers.HomeController.daily(date:Long)

### CLEANUP ###

GET     /cleanup                  controllers.CleanupController.index()
GET     /cleanup/picture          controllers.CleanupController.pictureCleanup()
GET     /cleanup/truck            controllers.CleanupController.truckCleanup()
GET     /cleanup/truck_next       controllers.CleanupController.truckCleanupNext()
GET     /cleanup/entry            controllers.CleanupController.entryFixup()
GET     /cleanup/delete_dated     controllers.CleanupController.deleteDated()

### TECHNICIANS ###

GET     /tech                    controllers.TechnicianController.list()
GET     /tech/disabled           controllers.TechnicianController.listDisabled()
GET     /tech/new                controllers.TechnicianController.create()
POST    /tech/save               controllers.TechnicianController.save()
GET     /tech/:id                controllers.TechnicianController.edit(id:Long)
POST    /tech/:id                controllers.TechnicianController.update(id:Long)
GET     /tech/:id/delete         controllers.TechnicianController.delete(id:Long)
GET     /tech/:id/enable         controllers.TechnicianController.enable(id:Long)
GET     /tech/:id/reset_upload   controllers.TechnicianController.resetUpload(id:Long)

### PROJECTS ###

GET     /project                    controllers.ProjectController.list()
GET     /project/disabled           controllers.ProjectController.list_disabled()
GET     /project/new                controllers.ProjectController.create()
POST    /project/save               controllers.ProjectController.save()
GET     /project/new/many           controllers.ProjectController.createMany()
POST    /project/many               controllers.ProjectController.saveMany()
GET     /project/:id                controllers.ProjectController.edit(id:Long)
POST    /project/:id                controllers.ProjectController.update(id:Long)
POST    /project/:id/delete         controllers.ProjectController.delete(id:Long)
GET     /project/:id/enable         controllers.ProjectController.enable(id:Long)
POST    /projects                   controllers.ProjectController.query()

### ROOT PROJECTS ###

GET     /project/root/list          controllers.RootProjectController.list()
GET     /project/root/disabled      controllers.RootProjectController.list_disabled()
POST    /project/root/save          controllers.RootProjectController.save()
GET     /project/:id/root           controllers.RootProjectController.edit(id:Long)
POST    /project/:id/root           controllers.RootProjectController.update(id:Long)
POST    /project/:id/root/delete    controllers.RootProjectController.delete(id:Long)
GET     /project/:id/root/enable    controllers.RootProjectController.enable(id:Long)
GET     /project/root/new           controllers.RootProjectController.create()
GET     /project/root/sub/:index    controllers.RootProjectController.listSubProjects(index:Int)
POST    /projects/root              controllers.RootProjectController.query()

### COMPANIES ###

GET     /company                    controllers.CompanyController.list(o ?= "asc", disabled:Boolean ?= false)
GET     /company/new                controllers.CompanyController.create()
POST    /company                    controllers.CompanyController.save()
GET     /company/new/many           controllers.CompanyController.createMany()
POST    /company/many               controllers.CompanyController.saveMany()
GET     /company/:id                controllers.CompanyController.edit(id:Long)
POST    /company/:id                controllers.CompanyController.update(id:Long)
POST    /company/:id/delete         controllers.CompanyController.delete(id:Long)
GET     /company/:id/enable         controllers.CompanyController.enable(id:Long)
GET     /company/:id/view           controllers.CompanyController.view(id:Long, sortBy ?= "name", o ?= "asc")
GET     /company/address/:index     controllers.CompanyController.listStreetAddresses(index:Int)
POST    /companies                  controllers.CompanyController.query()

### EQUIPMENTS ###

GET     /equipment                  controllers.EquipmentController.list(p:Int ?= 0, disabled:Boolean ?= false)
GET     /equipment/new              controllers.EquipmentController.create()
POST    /equipment                  controllers.EquipmentController.save()
GET     /equipment/new/many         controllers.EquipmentController.createMany()
POST    /equipment/many             controllers.EquipmentController.saveMany()
GET     /equipment/:id              controllers.EquipmentController.edit(id:Long)
POST    /equipment/:id              controllers.EquipmentController.update(id:Long)
GET     /equipment/:id/project/:projectId/add       controllers.EquipmentController.addProject(id:Long, projectId:Long)
GET     /equipment/:id/project/:projectId/remove    controllers.EquipmentController.removeProject(id:Long, projectId:Long)
POST    /equipment/:id/delete       controllers.EquipmentController.delete(id:Long)
GET     /equipment/:id/enable       controllers.EquipmentController.enable(id:Long)
GET     /equipment/num_entries/next controllers.EquipmentController.fillNext()
POST    /equipments                 controllers.EquipmentController.queryOldWay()
POST    /equipments/root            controllers.EquipmentController.queryWithRoot()

### NOTES ###

GET     /note                  controllers.NoteController.list()
GET     /note/disabled         controllers.NoteController.list_disabled()
GET     /note/new              controllers.NoteController.create()
POST    /note                  controllers.NoteController.save()
GET     /note/new/many         controllers.NoteController.createMany()
POST    /note/many             controllers.NoteController.saveMany()
GET     /note/:id              controllers.NoteController.edit(id:Long)
POST    /note/:id              controllers.NoteController.update(id:Long)
GET     /note/:id/project/:projectId/add       controllers.NoteController.addProject(id:Long, projectId:Long)
GET     /note/:id/project/:projectId/remove    controllers.NoteController.removeProject(id:Long, projectId:Long)
POST    /note/:id/delete       controllers.NoteController.delete(id:Long)
GET     /note/:id/enable       controllers.NoteController.enable(id:Long)
POST    /notes                 controllers.NoteController.queryOldWay()
POST    /notes/root            controllers.NoteController.queryWithRoot()

### FLOWS ###

GET     /flow                       controllers.FlowController.list()
GET     /flow/new                   controllers.FlowController.create()
GET     /flow/:id                   controllers.FlowController.edit(id:Long)
GET     /flow/:id/edit_message/:message     controllers.FlowController.editWithMessage(id:Long, message: String)
POST    /flow/:id                           controllers.FlowController.save(id:Long)
GET     /flow/:id/delete                    controllers.FlowController.delete(id:Long)
GET     /flow/:id/up/:elementId             controllers.FlowController.moveUp(id:Long, elementId:Long)
GET     /flow/:id/down/:elementId           controllers.FlowController.moveDown(id:Long, elementId:Long)
GET     /flow/:id/edit_element/:elementId   controllers.FlowController.editElement(id:Long, elementId:Long)
GET     /flow/:id/delete_element/:elementId controllers.FlowController.deleteElement(id:Long, elementId:Long)
GET     /flow/:id/add_element               controllers.FlowController.addElement(id:Long)
POST    /flow/:id/save_element/:elementId   controllers.FlowController.saveElement(id:Long, elementId: Long)
POST    /flows                      controllers.FlowController.query()

### CLIENTS ###

GET     /client                controllers.ClientController.list()
GET     /client/new            controllers.ClientController.create()
POST    /client                controllers.ClientController.save()
GET     /client/:id            controllers.ClientController.edit(id:Long)
POST    /client/:id            controllers.ClientController.update(id:Long)
POST    /client/:id/delete     controllers.ClientController.delete(id:Long)

### WORK ORDER SUMMARIES

GET     /work/summary/list       controllers.WorkOrderController.list(p:Int ?= 0, s ?= "last_modified", o ?= "desc", message ?= "")
GET     /work/summary/:id/delete controllers.WorkOrderController.deleteSummary(id:Integer)
GET     /work/import/form      controllers.WorkOrderController.importWorkOrdersForm(message ?= "")
POST    /work/import           controllers.WorkOrderController.importWorkOrders()
GET     /work/export           controllers.WorkOrderController.exportWorkOrders()

### WORK ORDERS

GET     /work/list             controllers.WorkOrderController.listOrders(u:Integer ?= 0, p:Int ?= 0, s ?= "client_id", o ?= "desc", message ?= "")
GET     /work/:id/view         controllers.WorkOrderController.view(id:Long)
GET     /work/:id/edit         controllers.WorkOrderController.edit(id:Long)
GET     /work/:id/delete       controllers.WorkOrderController.delete(id:Long)
GET     /work/:id/update       controllers.WorkOrderController.update(id:Long)
GET     /work/progress_grid    controllers.WorkOrderController.viewProgressGrid(u:Integer)

### ENTRIES ###

# Entries list (look at the default values for pagination parameters)
GET     /entry                        controllers.EntryController.list(page:Int ?= 0, pageSize:Int ?= 100, sort ?= "date", order ?= "desc", searchTerm ?= "null", searchField ?= "null")
GET     /entry/:id/pictures           controllers.EntryController.pictures(id:Long)
GET     /entry/:filename/picture      controllers.EntryController.getImage(filename:String)
GET     /entry/:id/notes              controllers.EntryController.notes(id:Long)
GET     /entry/:id/view               controllers.EntryController.view(id:Long)
GET     /entry/:id/edit               controllers.EntryController.edit(id:Long)
GET     /entry/:id/update             controllers.EntryController.update(id:Long)
GET     /entry/:id/delete             controllers.EntryController.delete(id:Long)
GET     /entry/search                 controllers.EntryController.search(page:Int ?= 0, pageSize:Int ?= 100, sort ?= "date", order ?= "desc")
GET     /entry/search/clear           controllers.EntryController.searchClear()
GET     /entry/:id/bytruck            controllers.EntryController.showByTruck(id:Long)
GET     /entry/byrepaired             controllers.EntryController.showByRepaired()
GET     /entry/compute_totals         controllers.EntryController.computeTotalNumRows()
GET     /entry/export_next            controllers.EntryController.exportNext()
GET     /entry/export_download        controllers.EntryController.exportDownload()
GET     /entry/delete_entries/:rows   controllers.EntryController.deleteEntries(rows:String)
GET     /entry/delete_next            controllers.EntryController.deleteNext()
GET     /entry/delete_abort           controllers.EntryController.deleteAbort()
GET     /entry/check_loading_pictures controllers.EntryController.checkLoadingPictures()
GET     /entry/reload_images          controllers.EntryController.reloadImages()
POST    /enter                        controllers.EntryController.enter()

# Long form
GET     /entry/export/:searchField/:searchTerm                             controllers.EntryController.export(searchTerm:String, searchField:String)
GET     /entry/list/:page/:pageSize/:sort/:order/:searchField/:searchTerm  controllers.EntryController.list2(page:Int, pageSize:Int, sort: String, order: String, searchTerm: String, searchField: String)

###  ENTRY RECOVERY ###

# Entries list (look at the default values for pagination parameters)
GET     /entry_recovery                         controllers.EntryRecoveryController.list(page:Int ?= 0, pageSize:Int ?= 100, sort ?= "date", order ?= "desc", searchTerm ?= "null", searchField ?= "null")
GET     /entry_recovery/:id/view                controllers.EntryRecoveryController.view(id:Long)
GET     /entry_recovery/:id/delete              controllers.EntryRecoveryController.delete(id:Long)
GET     /entry_recovery/:id/pictures            controllers.EntryRecoveryController.pictures(id:Long)
GET     /entry_recovery/:id/notes               controllers.EntryRecoveryController.notes(id:Long)
GET     /entry_recovery/search                  controllers.EntryRecoveryController.search(page:Int ?= 0, pageSize:Int ?= 100, sort ?= "date", order ?= "desc")
GET     /entry_recovery/search/clear            controllers.EntryRecoveryController.searchClear()
GET     /entry_recovery/:id/bytruck             controllers.EntryRecoveryController.showByTruck(id:Long)
GET     /entry_recovery/compute_totals          controllers.EntryRecoveryController.computeTotalNumRows()
GET     /entry_recovery/import                  controllers.EntryRecoveryController.importStart()
GET     /entry_recovery/import_next             controllers.EntryRecoveryController.importNext()
GET     /entry_recovery/install                 controllers.EntryRecoveryController.installStart()
GET     /entry_recovery/install_next            controllers.EntryRecoveryController.installNext()
GET     /entry_recovery/delete_entries/:rows    controllers.EntryRecoveryController.deleteEntries(rows:String)
GET     /entry_recovery/delete_next             controllers.EntryRecoveryController.deleteNext()
GET     /entry_recovery/delete_abort            controllers.EntryRecoveryController.deleteAbort()
GET     /entry_recovery/check_loading_pictures  controllers.EntryRecoveryController.checkLoadingPictures()
GET     /entry_recovery/reload_images           controllers.EntryRecoveryController.reloadImages()

# Long form
GET     /entry_recovery/list/:page/:pageSize/:sort/:order/:searchField/:searchTerm  controllers.EntryRecoveryController.list2(page:Int, pageSize:Int, sort: String, order: String, searchTerm: String, searchField: String)

### MESSAGES ###

GET     /messages                controllers.MessageController.list(p:Int ?= 0, s ?= "log_time", o ?= "desc")
GET     /messages/:id/view       controllers.MessageController.view(id:Long)
GET     /messages/:id/delete     controllers.MessageController.delete(id:Long)
GET     /messages/delete_all     controllers.MessageController.deleteAll()
GET     /messages/delete_page    controllers.MessageController.deletePage()
POST    /message                 controllers.MessageController.message()
GET     /message/page_size/:size controllers.MessageController.pageSize(size:String)

### TRUCKS ###

GET     /truck                 controllers.TruckController.list(p:Int ?= 0)
GET     /truck/toggle_filter   controllers.TruckController.toggleFilter()
POST    /truck/:id/delete      controllers.TruckController.delete(id:Long)
GET     /truck/:id             controllers.TruckController.edit(id:Long)
POST    /truck/:id             controllers.TruckController.update(id:Long)
POST    /trucks                controllers.TruckController.query()

### VEHICLES ###

GET     /vehicles/list         controllers.VehicleController.list(p:Int ?= 0, s ?= "entry_time", o ?= "desc")
GET     /vehicles/names        controllers.VehicleController.names()
GET     /vehicles/names/edit   controllers.VehicleController.editNames()
POST    /vehicles/:id/delete   controllers.VehicleController.delete(id:Long)
POST    /vehicles/names/save   controllers.VehicleController.saveNames()
POST    /vehicle               controllers.VehicleController.enter()
POST    /strings               controllers.VehicleController.strings()
POST    /vehicles              controllers.VehicleController.queryNames()

### DAAR ###

GET     /daar/list             controllers.DaarController.list(page:Int ?= 0, pageSize:Int ?= 100, sort ?= "date", order ?= "desc", searchTerm ?= "null", searchField ?= "null")
GET     /daar/:id/view         controllers.DaarController.view(id:Long)
GET     /daar/search           controllers.DaarController.search(page:Int ?= 0, pageSize:Int ?= 100, sort ?= "date", order ?= "desc")
GET     /daar/search/clear     controllers.DaarController.searchClear()
POST    /daar/enter            controllers.DaarController.enter()
GET     /daar/compute_totals   controllers.DaarController.computeTotalNumRows()

# Long form
GET     /daar/list/:page/:pageSize/:sort/:order/:searchField/:searchTerm  controllers.DaarController.list2(page:Int, pageSize:Int, sort: String, order: String, searchTerm: String, searchField: String)

### APP SIDE MISC REQUESTS ###

POST    /register              controllers.PostController.register()
POST    /ping                  controllers.PostController.ping()
